<?xml version="1.0" encoding="UTF-8"?>
<syntax name="packer">
    <meta>
        <name>Packer</name>
        <type>structured</type>
        <preferred-file-extension>pkr.hcl</preferred-file-extension>
        <parent>hcl</parent>
    </meta>

    <detectors>
        <extension priority="1.0">pkr.hcl</extension>
    </detectors>

<indentation>
    <increase>
        <expression>(\{[^}\"]*$)|(\[[^\]\"]*$)|(\([^)\"]*$)</expression>
    </increase>
    <decrease>
        <expression>^\s*(\s*/\*.*\*/\s*)*[\}\]\)\\]</expression>
    </decrease>
</indentation>

    <comments>
        <single>
            <!--
                While HCL does support // that's considered less than ideal
            -->
            <expression>#</expression>
        </single>
        <!-- per https://www.terraform.io/docs/configuration/syntax.html#comments  -->
        <multiline>
            <starts-with>
                <expression>/*</expression>
            </starts-with>
            <ends-with>
                <expression>*/</expression>
            </ends-with>
        </multiline>
    </comments>

    <brackets>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
    </brackets>

    <surrounding-pairs>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
        <pair open="&quot;" close="&quot;" />
    </surrounding-pairs>

    <scopes>
        <include syntax="hcl" collection="comments" />
        <include syntax="hcl" collection="blocks" />

        <include syntax="self" collection="blocks" />
    </scopes>

    <collections>
        <!-- Unused/present for future use -->
        <!-- <collection name="functions">
            <scope name="packer.identifier.core.function.name" suffix="(?=\()">
                <strings suffix="(?=\()">
                    <script>regex_replace</script>
                    <script>sha512</script>
                    <script>convert</script>
                    <script>uuidv4</script>
                </strings>
            </scope>
        </collection> -->
        <collection name="blocks">
            <!-- top-level resource -->
            <scope name="packer.configuration">
                <symbol type="block">
                    <context behavior="subtree" fold-type="function" />
                </symbol>
                <starts-with>
                    <expression>(packer)\s+(\{)</expression>
                    <capture number="1" name="packer.keyword" />
                    <capture number="2" name="hcl.bracket.curly.open" />
                </starts-with>
                <ends-with>
                    <expression>(\})</expression>
                    <capture number="1" name="hcl.bracket.curly.close" />
                </ends-with>
                <subscopes>
                    <include syntax="hcl" collection="strings" />
                    <include syntax="hcl" collection="numbers" />
                    <include syntax="hcl" collection="types" />
                    <include syntax="hcl" collection="values" />
                    <include syntax="hcl" collection="assignments" />
                    <include syntax="hcl" collection="inner-blocks" />
                    <include syntax="hcl" collection="comments" />


                </subscopes>
            </scope>
            <scope name="packer.resource.build">
                <symbol type="block">"
                    <context behavior="subtree" fold-type="function" />
                </symbol>
                <starts-with>
                    <expression>(build)\s+(\{)</expression>
                    <capture number="1" name="packer.keyword" />
                    <capture number="2" name="hcl.bracket.curly.open" />
                </starts-with>
                <ends-with>
                    <expression>(\})</expression>
                    <capture number="1" name="hcl.bracket.curly.close" />
                </ends-with>
                <subscopes>
                    <include syntax="hcl" collection="strings" />
                    <include syntax="hcl" collection="numbers" />
                    <include syntax="hcl" collection="types" />
                    <include syntax="hcl" collection="values" />
                    <include syntax="hcl" collection="assignments" />
                    <include syntax="hcl" collection="inner-blocks" />
                    <include syntax="hcl" collection="comments" />


                </subscopes>
            </scope>
        </collection>
    </collections>
</syntax>
